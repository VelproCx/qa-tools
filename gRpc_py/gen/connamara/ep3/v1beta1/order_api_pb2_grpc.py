# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from gen.connamara.ep3.v1beta1 import order_api_pb2 as connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2


class OrderAPIStub(object):
    """OrderAPI is the API Surface for connected clients to query order and order history.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SearchOrders = channel.unary_unary(
            '/connamara.ep3.v1beta1.OrderAPI/SearchOrders',
            request_serializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchOrdersRequest.SerializeToString,
            response_deserializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchOrdersResponse.FromString,
        )
        self.SearchExecutions = channel.unary_unary(
            '/connamara.ep3.v1beta1.OrderAPI/SearchExecutions',
            request_serializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchExecutionsRequest.SerializeToString,
            response_deserializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchExecutionsResponse.FromString,
        )
        self.SearchTrades = channel.unary_unary(
            '/connamara.ep3.v1beta1.OrderAPI/SearchTrades',
            request_serializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchTradesRequest.SerializeToString,
            response_deserializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchTradesResponse.FromString,
        )
        self.DownloadTrades = channel.unary_stream(
            '/connamara.ep3.v1beta1.OrderAPI/DownloadTrades',
            request_serializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadTradesRequest.SerializeToString,
            response_deserializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadTradesResponse.FromString,
        )
        self.DownloadExecutions = channel.unary_stream(
            '/connamara.ep3.v1beta1.OrderAPI/DownloadExecutions',
            request_serializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadExecutionsRequest.SerializeToString,
            response_deserializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadExecutionsResponse.FromString,
        )
        self.DownloadOrders = channel.unary_stream(
            '/connamara.ep3.v1beta1.OrderAPI/DownloadOrders',
            request_serializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadOrdersRequest.SerializeToString,
            response_deserializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadOrdersResponse.FromString,
        )


class OrderAPIServicer(object):
    """OrderAPI is the API Surface for connected clients to query order and order history.
    """

    def SearchOrders(self, request, context):
        """SearchOrders searches for exchange orders using the given details to filter and returns a list of the found orders.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchExecutions(self, request, context):
        """SearchExecutions searches for exchange executions using the given details to filter and returns a list of the found executions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchTrades(self, request, context):
        """SearchTrades searches for exchange trades using the given details to filter and returns a list of the found trades.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadTrades(self, request, context):
        """DownlaodTrades searches for exchange trades using the given details to filter and returns the trades as a csv file stream.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadExecutions(self, request, context):
        """DownloadExecutions searches for exchange executions using the given details to filter and returns the executions as a csv file stream.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadOrders(self, request, context):
        """DownloadOrders searches for exchange orders using the given details to filter and returns the orders as a csv file stream.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'SearchOrders': grpc.unary_unary_rpc_method_handler(
            servicer.SearchOrders,
            request_deserializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchOrdersRequest.FromString,
            response_serializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchOrdersResponse.SerializeToString,
        ),
        'SearchExecutions': grpc.unary_unary_rpc_method_handler(
            servicer.SearchExecutions,
            request_deserializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchExecutionsRequest.FromString,
            response_serializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchExecutionsResponse.SerializeToString,
        ),
        'SearchTrades': grpc.unary_unary_rpc_method_handler(
            servicer.SearchTrades,
            request_deserializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchTradesRequest.FromString,
            response_serializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchTradesResponse.SerializeToString,
        ),
        'DownloadTrades': grpc.unary_stream_rpc_method_handler(
            servicer.DownloadTrades,
            request_deserializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadTradesRequest.FromString,
            response_serializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadTradesResponse.SerializeToString,
        ),
        'DownloadExecutions': grpc.unary_stream_rpc_method_handler(
            servicer.DownloadExecutions,
            request_deserializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadExecutionsRequest.FromString,
            response_serializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadExecutionsResponse.SerializeToString,
        ),
        'DownloadOrders': grpc.unary_stream_rpc_method_handler(
            servicer.DownloadOrders,
            request_deserializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadOrdersRequest.FromString,
            response_serializer=connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadOrdersResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'connamara.ep3.v1beta1.OrderAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))

 # This class is part of an EXPERIMENTAL API.


class OrderAPI(object):
    """OrderAPI is the API Surface for connected clients to query order and order history.
    """

    @staticmethod
    def SearchOrders(request,
                     target,
                     options=(),
                     channel_credentials=None,
                     call_credentials=None,
                     insecure=False,
                     compression=None,
                     wait_for_ready=None,
                     timeout=None,
                     metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.v1beta1.OrderAPI/SearchOrders',
                                             connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchOrdersRequest.SerializeToString,
                                             connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchOrdersResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchExecutions(request,
                         target,
                         options=(),
                         channel_credentials=None,
                         call_credentials=None,
                         insecure=False,
                         compression=None,
                         wait_for_ready=None,
                         timeout=None,
                         metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.v1beta1.OrderAPI/SearchExecutions',
                                             connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchExecutionsRequest.SerializeToString,
                                             connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchExecutionsResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchTrades(request,
                     target,
                     options=(),
                     channel_credentials=None,
                     call_credentials=None,
                     insecure=False,
                     compression=None,
                     wait_for_ready=None,
                     timeout=None,
                     metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.v1beta1.OrderAPI/SearchTrades',
                                             connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchTradesRequest.SerializeToString,
                                             connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.SearchTradesResponse.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadTrades(request,
                       target,
                       options=(),
                       channel_credentials=None,
                       call_credentials=None,
                       insecure=False,
                       compression=None,
                       wait_for_ready=None,
                       timeout=None,
                       metadata=None):
        return grpc.experimental.unary_stream(request, target, '/connamara.ep3.v1beta1.OrderAPI/DownloadTrades',
                                              connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadTradesRequest.SerializeToString,
                                              connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadTradesResponse.FromString,
                                              options, channel_credentials,
                                              insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadExecutions(request,
                           target,
                           options=(),
                           channel_credentials=None,
                           call_credentials=None,
                           insecure=False,
                           compression=None,
                           wait_for_ready=None,
                           timeout=None,
                           metadata=None):
        return grpc.experimental.unary_stream(request, target, '/connamara.ep3.v1beta1.OrderAPI/DownloadExecutions',
                                              connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadExecutionsRequest.SerializeToString,
                                              connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadExecutionsResponse.FromString,
                                              options, channel_credentials,
                                              insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadOrders(request,
                       target,
                       options=(),
                       channel_credentials=None,
                       call_credentials=None,
                       insecure=False,
                       compression=None,
                       wait_for_ready=None,
                       timeout=None,
                       metadata=None):
        return grpc.experimental.unary_stream(request, target, '/connamara.ep3.v1beta1.OrderAPI/DownloadOrders',
                                              connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadOrdersRequest.SerializeToString,
                                              connamara_dot_ep3_dot_v1beta1_dot_order__api__pb2.DownloadOrdersResponse.FromString,
                                              options, channel_credentials,
                                              insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
