# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from gen.connamara.ep3.instruments.v1beta1 import instruments_api_pb2 as connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2


class InstrumentsAPIStub(object):
    """InstrumentsAPI is the core grpc interface to the Instrument Server.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListProducts = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/ListProducts',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListProductsRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListProductsResponse.FromString,
                )
        self.CreateProduct = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/CreateProduct',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateProductRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateProductResponse.FromString,
                )
        self.UpdateProduct = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdateProduct',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateProductRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateProductResponse.FromString,
                )
        self.GetProduct = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/GetProduct',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetProductRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetProductResponse.FromString,
                )
        self.DeleteProduct = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/DeleteProduct',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteProductRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteProductResponse.FromString,
                )
        self.ListInstruments = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/ListInstruments',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListInstrumentsRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListInstrumentsResponse.FromString,
                )
        self.ListSymbols = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/ListSymbols',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListSymbolsRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListSymbolsResponse.FromString,
                )
        self.GetInstrument = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/GetInstrument',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetInstrumentRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetInstrumentResponse.FromString,
                )
        self.CreateInstrument = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/CreateInstrument',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateInstrumentRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateInstrumentResponse.FromString,
                )
        self.UpdatePendingInstrument = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdatePendingInstrument',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdatePendingInstrumentRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdatePendingInstrumentResponse.FromString,
                )
        self.UpdateActiveInstrument = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdateActiveInstrument',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateActiveInstrumentRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateActiveInstrumentResponse.FromString,
                )
        self.DeleteInstrument = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/DeleteInstrument',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteInstrumentRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteInstrumentResponse.FromString,
                )
        self.UpdateInstrumentState = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdateInstrumentState',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateInstrumentStateRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateInstrumentStateResponse.FromString,
                )
        self.UpdateInstrumentStats = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdateInstrumentStats',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateInstrumentStatsRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateInstrumentStatsResponse.FromString,
                )
        self.UpdateLastPrice = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdateLastPrice',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateLastPriceRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateLastPriceResponse.FromString,
                )
        self.UpdateSettlementPrice = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdateSettlementPrice',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateSettlementPriceRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateSettlementPriceResponse.FromString,
                )
        self.UpdateOpenInterest = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdateOpenInterest',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateOpenInterestRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateOpenInterestResponse.FromString,
                )
        self.GetMetadata = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/GetMetadata',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetMetadataRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetMetadataResponse.FromString,
                )
        self.ListenInstruments = channel.unary_stream(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/ListenInstruments',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListenInstrumentsRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListenInstrumentsResponse.FromString,
                )
        self.CreateHolidayCalendar = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/CreateHolidayCalendar',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateHolidayCalendarRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateHolidayCalendarResponse.FromString,
                )
        self.GetHolidayCalendar = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/GetHolidayCalendar',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetHolidayCalendarRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetHolidayCalendarResponse.FromString,
                )
        self.UpdateHolidayCalendar = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdateHolidayCalendar',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateHolidayCalendarRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateHolidayCalendarResponse.FromString,
                )
        self.DeleteHolidayCalendar = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/DeleteHolidayCalendar',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteHolidayCalendarRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteHolidayCalendarResponse.FromString,
                )
        self.ListHolidayCalendars = channel.unary_unary(
                '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/ListHolidayCalendars',
                request_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListHolidayCalendarsRequest.SerializeToString,
                response_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListHolidayCalendarsResponse.FromString,
                )


class InstrumentsAPIServicer(object):
    """InstrumentsAPI is the core grpc interface to the Instrument Server.
    """

    def ListProducts(self, request, context):
        """ListProducts returns a listing of all known products.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateProduct(self, request, context):
        """CreateProduct creates a product.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProduct(self, request, context):
        """UpdateProduct updates a product.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProduct(self, request, context):
        """GetProduct returns a product matching the request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProduct(self, request, context):
        """DeleteProduct deletes the product matching the request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListInstruments(self, request, context):
        """ListInstruments returns a list of tradable instruments matching the request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSymbols(self, request, context):
        """ListSymbols returns a list of symbols on the exchange.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInstrument(self, request, context):
        """GetInstrument returns the tradable instrument matching the request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateInstrument(self, request, context):
        """CreateInstrument creates an instrument.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePendingInstrument(self, request, context):
        """UpdatePendingInstrument updates a tradable instrument only if in the pending state.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateActiveInstrument(self, request, context):
        """UpdateActiveInstrument updates a subset of tradable instrument that may be altered in any active state.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteInstrument(self, request, context):
        """DeleteInstrument deletes the instrument matching the request.
        Note: this request will hard delete the instrument.  If softdeleting, UpdateInstrumentState to TERMINATED
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateInstrumentState(self, request, context):
        """UpdateInstrumentState sets the state of the tradable instrument.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateInstrumentStats(self, request, context):
        """UpdateInstrumentStats updates all stats of the tradable instrument.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateLastPrice(self, request, context):
        """UpdateLastPrice updates the last price of the tradable instrument.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateSettlementPrice(self, request, context):
        """UpdateSettlementPrice updates the settlement price of the tradable instrument.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateOpenInterest(self, request, context):
        """UpdateOpenInterest updates the open interest of the tradable instrument.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMetadata(self, request, context):
        """GetMetadata returns miscellaneous server metadata.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListenInstruments(self, request, context):
        """ListenInstruments returns a stream of instrument updates.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateHolidayCalendar(self, request, context):
        """CreateHolidayCalendar creates a holiday calendar.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHolidayCalendar(self, request, context):
        """GetHolidayCalendar gets a holiday calendar.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateHolidayCalendar(self, request, context):
        """UpdateHolidayCalendar updates a holiday calendar.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteHolidayCalendar(self, request, context):
        """DeleteHolidayCalendar deletes a holiday calendar.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListHolidayCalendars(self, request, context):
        """ListHolidayCalendars returns a listing of all known holiday calendars.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InstrumentsAPIServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProducts,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListProductsRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListProductsResponse.SerializeToString,
            ),
            'CreateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProduct,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateProductRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateProductResponse.SerializeToString,
            ),
            'UpdateProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProduct,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateProductRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateProductResponse.SerializeToString,
            ),
            'GetProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProduct,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetProductRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetProductResponse.SerializeToString,
            ),
            'DeleteProduct': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProduct,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteProductRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteProductResponse.SerializeToString,
            ),
            'ListInstruments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListInstruments,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListInstrumentsRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListInstrumentsResponse.SerializeToString,
            ),
            'ListSymbols': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSymbols,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListSymbolsRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListSymbolsResponse.SerializeToString,
            ),
            'GetInstrument': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInstrument,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetInstrumentRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetInstrumentResponse.SerializeToString,
            ),
            'CreateInstrument': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateInstrument,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateInstrumentRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateInstrumentResponse.SerializeToString,
            ),
            'UpdatePendingInstrument': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePendingInstrument,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdatePendingInstrumentRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdatePendingInstrumentResponse.SerializeToString,
            ),
            'UpdateActiveInstrument': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateActiveInstrument,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateActiveInstrumentRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateActiveInstrumentResponse.SerializeToString,
            ),
            'DeleteInstrument': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteInstrument,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteInstrumentRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteInstrumentResponse.SerializeToString,
            ),
            'UpdateInstrumentState': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateInstrumentState,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateInstrumentStateRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateInstrumentStateResponse.SerializeToString,
            ),
            'UpdateInstrumentStats': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateInstrumentStats,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateInstrumentStatsRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateInstrumentStatsResponse.SerializeToString,
            ),
            'UpdateLastPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateLastPrice,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateLastPriceRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateLastPriceResponse.SerializeToString,
            ),
            'UpdateSettlementPrice': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateSettlementPrice,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateSettlementPriceRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateSettlementPriceResponse.SerializeToString,
            ),
            'UpdateOpenInterest': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateOpenInterest,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateOpenInterestRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateOpenInterestResponse.SerializeToString,
            ),
            'GetMetadata': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMetadata,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetMetadataRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetMetadataResponse.SerializeToString,
            ),
            'ListenInstruments': grpc.unary_stream_rpc_method_handler(
                    servicer.ListenInstruments,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListenInstrumentsRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListenInstrumentsResponse.SerializeToString,
            ),
            'CreateHolidayCalendar': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateHolidayCalendar,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateHolidayCalendarRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateHolidayCalendarResponse.SerializeToString,
            ),
            'GetHolidayCalendar': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHolidayCalendar,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetHolidayCalendarRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetHolidayCalendarResponse.SerializeToString,
            ),
            'UpdateHolidayCalendar': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateHolidayCalendar,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateHolidayCalendarRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateHolidayCalendarResponse.SerializeToString,
            ),
            'DeleteHolidayCalendar': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteHolidayCalendar,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteHolidayCalendarRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteHolidayCalendarResponse.SerializeToString,
            ),
            'ListHolidayCalendars': grpc.unary_unary_rpc_method_handler(
                    servicer.ListHolidayCalendars,
                    request_deserializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListHolidayCalendarsRequest.FromString,
                    response_serializer=connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListHolidayCalendarsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'connamara.ep3.instruments.v1beta1.InstrumentsAPI', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InstrumentsAPI(object):
    """InstrumentsAPI is the core grpc interface to the Instrument Server.
    """

    @staticmethod
    def ListProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/ListProducts',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListProductsRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListProductsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/CreateProduct',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateProductRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdateProduct',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateProductRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/GetProduct',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetProductRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteProduct(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/DeleteProduct',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteProductRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListInstruments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/ListInstruments',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListInstrumentsRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListInstrumentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSymbols(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/ListSymbols',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListSymbolsRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListSymbolsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInstrument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/GetInstrument',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetInstrumentRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetInstrumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateInstrument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/CreateInstrument',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateInstrumentRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateInstrumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePendingInstrument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdatePendingInstrument',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdatePendingInstrumentRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdatePendingInstrumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateActiveInstrument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdateActiveInstrument',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateActiveInstrumentRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateActiveInstrumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteInstrument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/DeleteInstrument',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteInstrumentRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteInstrumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateInstrumentState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdateInstrumentState',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateInstrumentStateRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateInstrumentStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateInstrumentStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdateInstrumentStats',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateInstrumentStatsRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateInstrumentStatsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateLastPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdateLastPrice',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateLastPriceRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateLastPriceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateSettlementPrice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdateSettlementPrice',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateSettlementPriceRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateSettlementPriceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateOpenInterest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdateOpenInterest',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateOpenInterestRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateOpenInterestResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMetadata(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/GetMetadata',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetMetadataRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetMetadataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListenInstruments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/ListenInstruments',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListenInstrumentsRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListenInstrumentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateHolidayCalendar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/CreateHolidayCalendar',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateHolidayCalendarRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.CreateHolidayCalendarResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHolidayCalendar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/GetHolidayCalendar',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetHolidayCalendarRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.GetHolidayCalendarResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateHolidayCalendar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/UpdateHolidayCalendar',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateHolidayCalendarRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.UpdateHolidayCalendarResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteHolidayCalendar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/DeleteHolidayCalendar',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteHolidayCalendarRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.DeleteHolidayCalendarResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListHolidayCalendars(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connamara.ep3.instruments.v1beta1.InstrumentsAPI/ListHolidayCalendars',
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListHolidayCalendarsRequest.SerializeToString,
            connamara_dot_ep3_dot_instruments_dot_v1beta1_dot_instruments__api__pb2.ListHolidayCalendarsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
